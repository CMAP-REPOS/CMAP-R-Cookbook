% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/finalize_plot.R
\name{finalize_plot}
\alias{finalize_plot}
\title{Arrange and save CMAP ggplot chart}
\usage{
finalize_plot(
  plot = NULL,
  title = "",
  caption = "",
  width = 670/72,
  height = 400/72,
  title_width = NULL,
  caption_valign = c("bottom", "top"),
  mode = c("plot"),
  filename = "",
  ppi = 300,
  fill_bg = "white",
  fill_canvas = "gray90",
  overrides = list(),
  legend_shift = TRUE,
  legend_bump = 0,
  debug = FALSE,
  use_cmap_aes = TRUE,
  ...
)
}
\arguments{
\item{plot}{ggplot object, the variable name of the plot you have created that
you want to finalize. If null (the default), the most recent plot will be
retrieved via \code{ggplot2::last_plot()}.}

\item{title, caption}{Char, the text you want to appear in the title and
caption blocks. If empty, any non-Null values from \code{plot} will be
retrieved. These blocks take html formatting, so manual text breaks can be
created with \code{<br>} and formatting can be changed with \code{<span>}.}

\item{width, height}{Numeric, the dimensions for the output image, including
the title. Units in inches, which interacts with \code{ppi} to define the
pixel dimensions of raster outputs. Default is 9.31 inches wide (670/72) and
5.56 inches tall (400/72), to match Comms specification for web graphics.}

\item{title_width}{Numeric, the width in inches for the title. If unspecified,
use 25 percent of the total output width (per Comms guidance).}

\item{caption_valign}{Char, align the caption text at the top or the bottom of
the available space between the title and bottom of image. This argument
accepts abbreviations, too: \code{c("bottom", "b", "top", "t")}.}

\item{mode}{Vector, the action(s) to be taken with the plot. Save using any of
the following: \code{png}, \code{tiff}, \code{jpeg}, \code{bmp}, \code{svg},
\code{pdf}, \code{ps}. View in R with: \code{plot}, \code{window} (`window`
currently works only on computers running Windows). Return an object with
\code{object}.}

\item{filename}{Char, the file path and name you want the plot to be saved to.
You may specify an extension to use. If you don't, the correct extension
will be added for you.}

\item{ppi}{Numeric, the resolution of exported images (pixels per inch).
Default = 300.}

\item{fill_bg, fill_canvas}{Char, strings that represent colors R can
interpret. They are used to fill behind and around the finished plot,
respectively.}

\item{overrides}{Named list, overrides the default drawing attributes defined
in \code{cmapplot_globals$consts} which are drawn by
\code{\link{finalize_plot}}. Units are in bigpts (1/72 of an inch).}

\item{legend_shift}{Bool, \code{TRUE}, the default, attempts to align the legend
all the way left (on top of the y axis labels) per CMAP design standards.
\code{FALSE} maintains the alignment used in the original plot.}

\item{legend_bump}{Numeric, shift the legend right (positive) or left
(negative) this many bigpts.}

\item{debug}{Bool, TRUE enables outlines around components of finalized plot.
Default = FALSE.}

\item{use_cmap_aes}{Bool, TRUE calls \code{\link{set_cmap_geom_defaults}} and
\code{\link{fetch_cmap_geom_defaults}} to use CMAP default aesthetic settings
for geoms. This should usually be \code{TRUE} (the default), but can be turned
off in special circumstances.}

\item{...}{pass additional arguments to ggplot2's \code{\link[ggplot2]{theme}}
function to override any elements of the default CMAP theme.}
}
\value{
Exports from this function use Cairo graphics drivers, while drawing
 within R is done with default (Windows) drivers. \code{mode = "object"} also
 returns a gTree object that can be stored and drawn later with
 \code{grid::grid.draw()}.
}
\description{
Place a ggplot into a frame defined by CMAP design standards. It will align
your title and caption to the left, add a horizontal line on top, and make
other adjustments. It can show you the final plot and/or export it as a raster
or vector file. This function will not apply CMAP design standards to the plot
itself: use with \code{theme_cmap()} for that.
}
\examples{
\dontrun{
econ_plot <- ggplot(data = cluster_jobchange,
                    mapping = aes(
                      y = reorder(name, jobchange),
                      x = jobchange,
                      fill = category)) +
  geom_col() +
  theme_cmap(gridlines = "v", vline = 0) +
  scale_x_continuous(labels = scales::comma)

finalize_plot(econ_plot,
               "Cluster-level employment changes in the Chicago MSA, 2001-17",
               "Source: Chicago Metropolitan Agency for Planning analysis",
               mode = "window",
               height = 6,
               width = 8,
               title_width = 2.5,
               overrides = list(margin_plot_r = 30))

transit_plot <- transit_ridership \%>\%
  mutate(system = case_when(
    system == "cta_bus" ~ "CTA (Bus)",
    system == "cta_rail" ~ "CTA (Rail)",
    system == "metra" ~ "Metra",
    system == "pace" ~ "Pace",
    system == "pace_ada" ~ "Paratransit"
  )) \%>\%
  ggplot(aes(x = year, y = ridership, color = system)) +
  geom_line() +
  theme_cmap(legend.max.columns = 3)

finalize_plot(transit_plot,
              "Transit ridership in the RTA region over time, 1980-2019
              (in millions)",
              "Source: Chicago Metropolitan Agency for Planning
              analysis of data from the Regional Transportation Authority",
              mode=c("plot", "pdf"),
              filename = "foo")
}
}
