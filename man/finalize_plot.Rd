% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/finalize_plot.R
\name{finalize_plot}
\alias{finalize_plot}
\title{Arrange and save CMAP ggplot chart}
\usage{
finalize_plot(input_plot = NULL, title = "", caption = "", width =
 670/72, height = 400/72, title_width = NULL, ppi = 300, mode = c("plot"),
 filename = "", caption_valign = c("top", "bottom"), fill_bg = "white",
 fill_canvas = "gray90", overrides = list())
}
\arguments{
\item{input_plot}{ggplot object, the variable name of the plot you have
created that you want to finalize. If null (the default), the most recent
plot will be retrieved via \code{ggplot2::last_plot()}.}

\item{title, caption}{Char, the text you want to appear in the title and
caption blocks. If empty, any non-Null values from \code{input_plot} will be
retrieved. These blocks take html formatting, so manual text breaks can be
created with \code{<br>} and formatting can be changed with \code{<span>}.}

\item{width, height}{Numeric, the dimensions for the output image, including
the title. Units in inches, which interacts with \code{ppi} to define the
pixel dimensions of raster outputs. Default is 9.31 inches wide (670/72) and
5.56 inches tall (400/72), to match Comms specification of 670px by 400px at
72ppi.}

\item{title_width}{Numeric, the width in inches for the title. If unspecified,
use 25 percent of the total output width (per Comms guidance).}

\item{ppi}{Numeric, the resolution of exported images (pixels per inch).
Default = 300.}

\item{mode}{Vector, the action(s) to be taken with the plot. Save using any of
the following: \code{png}, \code{tiff}, \code{jpeg}, \code{bmp}, \code{svg},
\code{pdf}, \code{ps}. View in R with: \code{plot}, \code{window} (`window`
currently works on computers running Windows). Return an object with
\code{object}.}

\item{filename}{Char, the file path and name you want the plot to be saved to.
You may specify an extension to use. If you don't, the correct extension
will be added for you.}

\item{caption_valign}{Char, align the caption text at the top or the bottom of
the available space between the title and gutter created by
\code{margin_v4}. This argument accepts abbreviations, too: \code{c("top",
"t", "bottom", "b")}. Note that \code{margin_v3} creates space above the
caption when it is aligned top, and below the caption when it is aligned
bottom.}

\item{fill_bg, fill_canvas}{Char, strings that represent colors R can
interpret. They are used to fill behind and around the finished plot,
respectively.}

\item{overrides}{Named list, overrides the default drawing attributes defined
in \code{cmapplot_globals$plot_constants} which are drawn by
\code{finalize_plot()} (this is most of them). Units are in bigpts (1/72 of
an inch).}
}
\value{
If and only if \code{"object"} is one of the modes specified, a gTree
 object is returned. gTree is an assembly of grobs, or graphical objects,
 that can be drawn using the grid package.
}
\description{
\code{finalize_plot} will place a ggplot into a frame defined by CMAP design
standards. It will align your title and caption to the left, add a horizontal
line on top, and make other adjustments. It can show you the final plot and/or
export it as a raster or vector file. This function will not apply CMAP design
standards to the plot itself: use with \code{theme_cmap()} for that.
}
\details{
Exports from this function use Cairo graphics drivers, while drawing within R
is done with default (Windows) drivers. \code{mode = "object"} also returns a
gTree object that can be stored and drawn later with \code{grid::grid.draw()}.
Lines drawn by any \code{geom_line()} geoms without line widths explicitly
specified are assigned a thicker width (specifically,
\code{cmapplot_globals$plot_constants$lwd_plotline}) in all outputs except for
when exporting as an object.
}
\examples{
\dontrun{
econ_plot <- ggplot(data = cluster_jobchange,
                    mapping = aes(
                      x = reorder(name, jobchange),
                      y = jobchange,
                      fill = category)) +
  geom_col() +
  coord_flip() +
  theme_cmap(gridlines = "v", hline = 0) +
  scale_y_continuous(labels = scales::comma)

finalize_plot(econ_plot,
               "Cluster-level employment changes in the Chicago MSA, 2001-17",
               "Source: Chicago Metropolitan Agency for Planning analysis",
               mode = "window",
               height = 6,
               width = 8,
               title_width = 2.5,
               overrides = list(margin_h3 = 30))

transit_plot <- transit_ridership \%>\%
  mutate(system = case_when(
    system == "cta_bus" ~ "CTA (Bus)",
    system == "cta_rail" ~ "CTA (Rail)",
    system == "metra" ~ "Metra",
    system == "pace" ~ "Pace",
    system == "pace_ada" ~ "Paratransit"
  )) \%>\%
  ggplot(aes(x = year, y = ridership, color = system)) +
  geom_line() +
  theme_cmap(max_columns = 3)

finalize_plot(transit_plot,
               "Transit ridership in the RTA region over time, 1980-2019
               (in millions).",
               "Source: Chicago Metropolitan Agency for Planning
               analysis of data from the Regional Transportation Authority.",
               mode=c("plot", "pdf"),
               filename = "foo",
               overrides = list(margin_h3 = 10))
}
}
