% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_pandemics.R
\name{geom_pandemics}
\alias{geom_pandemics}
\title{Add health pandemics to time series graphs}
\usage{
geom_pandemics(
  xformat = "numeric",
  text = TRUE,
  label = paste(" ", pandemics$name, " Pandemic"),
  ymin = -Inf,
  ymax = Inf,
  fill = "#002d49",
  text_nudge_x = 0.2,
  text_nudge_y = 0,
  show.legend = FALSE,
  rect_aes = NULL,
  update_pandemics = FALSE,
  text_aes = NULL,
  show_ongoing = TRUE,
  ...
)
}
\arguments{
\item{xformat}{Char, a string indicating whether the x axis of the primary
data being graphed is in integer or date format. This argument will
currently accept one of \code{c("numeric", "date")}.}

\item{text}{Logical, whether or not to include labels that identify each box
as a pandemic.}

\item{label}{Char, the text to label each pandemic. Defaults to a
concatenation of " ", the pandemic name, and " Pandemic".
 (The space is a more consistent y axis buffer than text_nudge_y because it
 not relative to the scale of the y axis.)}

\item{ymin, ymax}{Numeric, The height of the pandemic rectangles. Defaults to
-Inf and +Inf. Override to the top and bottom gridlines to implement ideal
CMAP design standards.}

\item{fill}{Char, the fill color for the pandemic rectangles. Defaults to
\code{#002d49} for compliance with CMAP design standards.}

\item{text_nudge_x, text_nudge_y}{Numeric, the amount to shift the labels along
each axis. Defaults to 0.2 and 0, respectively. Note that these use the x
and y scales so will need to be adjusted depending on what is being graphed.
`text_nudge_y` only works when `ymax` is not set to `+Inf`, which is the
default. Consider setting `ymax` equal to the top of your graph or top
gridline as an additional argument in `geom_pandemics()`.}

\item{show.legend}{Logical, whether to render the rectangles in the legend.
Defaults to \code{FALSE}.}

\item{rect_aes, text_aes}{Named list, additional aesthetics to send to the
rectangle and text geoms, respectively.}

\item{update_pandemics}{Logical or data frame. \code{FALSE}, the default,
relies on the package's built in pandemics table, which was last updated in
January 2024 and is loaded into the \code{sysdata.R} file located in the
\code{R} directory. A custom data table of recessions can also be
passed to this argument, but it must be structured identically to the
six-column data table created in \code{pandemics_data.R}.}

\item{show_ongoing}{Logical. \code{TRUE}, the default, will display an ongoing
pandemic that does not yet have a defined end date. If an ongoing pandemic
exists, it will be displayed as extending through the maximum extent of the
graph's data (up to 2200). \code{FALSE} will remove the ongoing pandemic
from the graph.}

\item{...}{additional aesthetics to send to BOTH the rectangle and text geoms.}
}
\description{
\code{geom_pandemics} returns one or two ggplot geoms that add rectangles
representing health pandemics (like COVID-19) to a plot. It will either return
only rectangles or, by default, both rectangles and text identifying each
pandemic. It uses the same approach as \code{geom_recessions}.
}
\section{Important notes}{
 If \code{show.legend = TRUE} you must place any
 categorical aesthetics (e.g. color, size) specific to the primary data in
 the geom(s) used to display that data. Otherwise, the legend will inherit
 aesthetics from geom_pandemics.

 It is best to place this object before your primary geom (likely
 \code{geom_line()}) in your code, so that ggplot draws it behind the primary
 data being drawn.
}

\section{Default color}{
 The CMAP color palette gray used for pandemics is
 \code{#e3e8eb}. The rectangle geom has default fill and alpha values of
 \code{#002d49} and \code{0.11} built into the function. These replicate the
 palette color at the highest possible transparency. This is done because
 there is no known way to place the pandemic geom behind the graph's grid
 lines. The default therefore produces the approved CMAP color while altering
 the appearance of any overlapping grid lines as little as possible. These
 can be overridden, but separately. Override fill using the top-level
 argument, as in \code{fill = "red"}. Override alpha within rect_aes as in
 \code{rect_aes = list(alpha = 0.5)}. Color and alpha were calculated using
 the hints found here:
 \url{https://stackoverflow.com/questions/6672374/convert-rgb-to-rgba-over-white}.
}

\section{Under the hood}{
 This function calls two custom geoms, constructed
 with ggproto. The custom GeomPandemics and GeomPandemicsText are modified
 versions of GeomRect and GeomText, respectively. The only variations to each
 occur in \code{default_aes}, \code{required_aes}, and \code{setup_data}
 arguments. These variations allow the the primary dataframe (specified in
 \code{ggplot(data = XXX)}) to filter the recessions displayed.
}

\examples{
df <- data.frame(year_dec=1975:2024, value=rnorm(100), var=c(rep("A", 50), rep("B", 50)))
df$year_date <- as.Date(lubridate::date_decimal(df$year_dec))

# A plot with an integer-based x axis
ggplot(df, mapping = aes(x = year_dec, y = value)) +
  geom_pandemics() +
  geom_line(aes(color = var)) +
  scale_x_continuous("Year") +
  theme_minimal()

# A plot with a date-based x axis
ggplot(df, mapping = aes(x = year_date, y = value)) +
  geom_pandemics(xformat = "date", show.legend = TRUE) +
  geom_line(aes(color = var)) +
  scale_x_date() +
  theme_minimal()

}
\seealso{
\itemize{ \item \url{https://ggplot2-book.org/extensions.html} \item
 \url{https://github.com/brodieG/ggbg/blob/development/inst/doc/extensions.html#stat-compute}
  \item \url{https://rpubs.com/hadley/97970} \item
 \url{https://ggplot2.tidyverse.org/articles/extending-ggplot2.html} }
}
